# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Project information -----------------------------------------------------
project = "mf_horizon_client"
copyright = "2018, Mind Foundry Ltd"
author = "Mind Foundry Ltd"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.


from mf_horizon_client import __version__ as package_version  # isort:skip
from mf_horizon_client import __gitsha__ as package_version_gitsha  # isort:skip

version = package_version.split("+")[0]
# Building the the docs will dirty the repo - so let's ignore everything after the last dot.
if "dirty" in version:
    version = version.rsplit(".", maxsplit=1)[0]
release = package_version_gitsha[:10] if package_version_gitsha else "(unknown)"


rst_epilog = """
.. |release_link| replace:: {link} 
""".format(
    link="https://gitlab.mflocal.com/horizon/mf_horizon_client/tree/" + release
)

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = "1.0"

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named "sphinx.ext.*") or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    # "sphinx_autodoc_typehints",
    "sphinx.ext.intersphinx",
    "sphinx.ext.mathjax",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "sphinx_gallery.gen_gallery",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = [".rst", ".md"]
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

from sphinx_gallery.sorting import FileNameSortKey

sphinx_gallery_conf = {
    # path to your examples scripts
    "examples_dirs": "../../examples",
    # path where to save gallery generated examples
    "gallery_dirs": "auto_examples",
    "within_subsection_order": FileNameSortKey,
}

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "alabaster"
# html_theme = "sphinx_rtd_theme"

if html_theme == "alabaster":
    html_theme_options = {
        # "font_size": "18px",
        "page_width": "1200px",
        "sidebar_width": "300px",
        "fixed_sidebar": True,
    }


# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ["_static"]
html_static_path = ["_static"]


def setup(app):
    if html_theme == "alabaster":
        app.add_stylesheet("css/custom_alabaster.css")
    if html_theme == "sphinx_rtd_theme":
        app.add_stylesheet("css/custom_rtd.css")


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "mf_horizon_clientdoc"

# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {"https://docs.python.org/": None}

nitpicky = True
nitpick_ignore = [("py:class", "typing_extensions.Protocol")]
